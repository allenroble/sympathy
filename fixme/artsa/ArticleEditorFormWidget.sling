
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import jk.widget.form

class is FormWidget is TitledWidget #widget:

prop api as APIClient
prop articleId as string

ctor(context as GuiApplicationContext)
{
	base(context)
	setFillContainerWidget(true)
	setEnableScrolling(false)
}

func getWidgetTitle as string
{
	return("Edit Article")
}

func getFormDeclaration override as FormDeclaration
{
	var v = new FormDeclaration()
	v.startHorizontalContainer()
	v.addTextInput("title", "Article Title", null).setProperty("weight", 2.0)
	v.addTextInput("banner", "Filename of banner image", null).setProperty("weight", 1.0)
	v.endHorizontalContainer()
	v.addTextInput("slogan", "Article Slogan", null)
	v.addTextAreaInput("intro", "Introduction Paragraph", null, 4)
	v.addStringListInput("categories", "Categories", null)
	v.addCodeInput("contentMarkup", "Article Text", null, 10).setProperty("weight", 1.0)
	return(v)
}

func addActions override
{
	addAction("Save", func {
		var data = getFormData()
		var content = data.getString("contentMarkup")
		data.remove("contentMarkup")
		if(String.isEmpty(articleId)) {
			; // FIXME: Come up with one?
		}
		api.updateArticle(articleId, data, content, func {
			PRINT("YEHEY!")
		})
	})
}

func initializeWidget override
{
	base.initializeWidget()
	if(String.isEmpty(articleId) == false && api != null) {
		api.getArticleDetails(articleId, func(details as DynamicMap) {
			setFormData(details, true)
		})
	}
}
