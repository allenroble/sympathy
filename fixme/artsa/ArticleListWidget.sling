
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import jk.widget.list
import jk.widget.common

class is ListItemWidget #widget:

prop api as APIClient

ctor(context as GuiApplicationContext):
	base(context)

func getWidgetTitle override as string:
	return "Articles"

func createWidgetForRecord(record as DynamicMap) override as Widget
{
	var v = new LayerWidget(context)
	v.addWidget(CanvasWidget.forColor(context, Color.forString("#EEEEEE")))
	var box = new VerticalBoxWidget(context)
	box.setWidgetMargin(context.getHeightValue("2mm"))
	box.setWidgetSpacing(context.getHeightValue("1mm"))
	box.addWidget(LabelWidget.forText(context, record.getString("title")).setWidgetFontBold(true))
	box.addWidget(LabelWidget.forText(context, record.getString("id")))
	v.addWidget(box)
	var thisWidget = this
	Widget.setWidgetClickHandler(v, func {
		NavigationWidget.pushToContainer(thisWidget, new ArticleEditorFormWidget(context).setArticleId(record.getString("id")).setApi(api))
	})
	return v
}

func startDataQuery(callback as function<void,vector<DynamicMap>>) override
{
	api.getAllArticles(func(articles as vector<DynamicMap>) {
		callback(articles)
	})
}
