
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import jk.widget.web

class is JSONAPIClientWithGui:

prop apiSecret as string

func customizeRequestHeaders(headers as KeyValueList<string,string>) override
{
	base.customizeRequestHeaders(headers)
	if(apiSecret != null) {
		headers.add("x-secret", apiSecret)
	}
}

func getServerInfo(callback as function<void,string,string>)
{
	doGet("/", func(data as DynamicMap) {
		if(handleAsError(data)) {
			return
		}
		callback(data.getString("server"), data.getString("version"))
	})
}

func getAllArticles(callback as function<void,vector<DynamicMap>>)
{
	doGet("/articles", func(data as DynamicMap) {
		if(handleAsError(data)) {
			return
		}
		var articles = data.getDynamicVector("data")
		if(articles == null) {
			onError(Error.forCode("noArticles"))
			return
		}
		callback(articles.toVectorOfDynamicMaps())
	})
}

func getArticleDetails(articleId as string, callback as function<void,DynamicMap>)
{
	doGet("/articles/" .. articleId, func(data as DynamicMap) {
		if(handleAsError(data)) {
			return
		}
		var dd = data.getDynamicMap("data")
		if(dd == null) {
			onError(Error.forCode("noData"))
			return
		}
		callback(dd)
	})
}

func updateArticle(articleId as string, headers as DynamicMap, content as string, callback as function)
{
	var data = new DynamicMap()
	data.setObject("headers", headers)
	data.setString("content", content)
	doPut("/articles/" .. articleId, data, func(data as DynamicMap) {
		if(handleAsError(data)) {
			return
		}
		callback()
	})
}
