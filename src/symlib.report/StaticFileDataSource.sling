
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import jk.fs
import jk.json

class is ReportDataSource:

func forFile(file as File) static as this
{
	var v = new this()
	assert v.readFile(file)
	return v
}

var fields as DynamicVector
var records as DynamicVector

func readFile(file as File) as bool
{
	var data = assert JSONParser.parse(file) as DynamicVector
	assert fields = data.getVector(0)
	data.remove(0)
	records = data
	return true
}

class MyIterator is Iterator<DynamicMap>
{
	prop fields as DynamicVector
	prop iterator as Iterator<object>

	func next as DynamicMap
	{
		assert iterator
		var o = assert iterator.next() as DynamicVector:
			iterator = null
		var v = new DynamicMap()
		for(var n=0; n<fields.getSize(); n++):
			v.setObject(fields.getString(n), o.get(n))
		return v
	}
}

func getDataRecords(query as string) as Iterator<DynamicMap>
{
	assert fields && records
	var v = new MyIterator()
	v.setFields(fields)
	v.setIterator(records.iterate())
	return v
}
