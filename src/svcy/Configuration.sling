
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import jk.fs

class:

prop timeStamp as long
prop workdir as File
prop repositories as vector<string>
prop services as vector<Service>
prop environment as map<string,string>

func addToRepositories(rep as string)
{
	assert rep
	if not repositories:
		repositories = new vector<string>
	repositories += rep
}

func addToServices(service as Service)
{
	assert service
	if not services:
		services = new vector<Service>
	services += service
}

func addToEnvironment(key as string, value as string)
{
	assert key
	if not environment:
		environment = new map<string,string>
	environment[key] = value
}
