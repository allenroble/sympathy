
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import jk.fs
import jk.log
import jk.env
import jk.server.web
import jk.http.server

class is WebServer:

var phantomJSExecPath as string

func configure(key as string, value as string, relativeTo as File, error as Error) override as bool
{
	if key == "phantomJSExecPath" {
		phantomJSExecPath = value
		return true
	}
	return base.configure(key, value, relativeTo, error)
}

func initializeServer(server as HTTPServer) override as bool
{
	assert base.initializeServer(server):
		Log.error(ctx, "Failed to initialize HTTP server")
	var phantomJSExec as File
	if String.isNotEmpty(phantomJSExecPath) {
		phantomJSExec = File.forPath(phantomJSExecPath)
	}
	else {
		phantomJSExec = ExternalCommand.findInPath("phantomjs")
	}
	if not phantomJSExec || phantomJSExec.isFile() == false {
		Log.error(ctx, "Failed to find phantomjs")
		return false
	}
	var requestHandler = new MyRequestHandler()
	requestHandler.setCtx(ctx)
	requestHandler.setFilename("html2pdfy")
	requestHandler.setPhantomJSExec(phantomJSExec)
	server.pushRequestHandler(requestHandler)
	return true
}

main:
	return new this().executeMain(args)
