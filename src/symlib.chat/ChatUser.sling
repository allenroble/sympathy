
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

class abstract:

prop userId as string
var engine protected as ChatEngine

func setEngine(engine as ChatEngine):
	this.engine = engine

func getConnection(connectionId as string) as ChatConnectionHandler
{
	assert engine
	return engine.getUserConnection(getUserId(), connectionId)
}

func removeConnection(connectionId as string)
{
	assert engine
	engine.removeUserConnection(getUserId(), connectionId)
}

func getConnectionCount as int
{
	assert engine
	return engine.getUserConnectionCount(getUserId())
}

func getConnectionIds as vector<string>
{
	assert engine
	return engine.getUserConnectionIds(getUserId())
}

func isOnline as bool
{
	assert engine
	return engine.isUserOnline(getUserId())
}

func getLastActive as long
{
	assert engine
	return engine.getUserLastActive(getUserId())
}
