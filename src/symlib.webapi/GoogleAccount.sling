
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import jk.url
import jk.json
import jk.http.client

class:

class MyHTTPClientListener is HTTPClientListener
{
	prop listener as function<void, DynamicMap, Error>
	var body as buffer

	func onError(message as string) override
	{
		if listener:
			listener(null, Error.forMessage(message))
	}

	func onAborted override
	{
		if listener:
			listener(null, Error.forCode("aborted"))
	}

	func onDataReceived(buffer as buffer) override as bool
	{
		body = Buffer.append(body, buffer)
		return true
	}

	func onResponseCompleted override
	{
		base.onResponseCompleted()
		if listener {
			var json = JSONParser.parse(body) as DynamicMap
			if json == null {
				listener(null, Error.forMessage("Invalid JSON Format from Google"))
				return
			}
			listener(json, null)
		}
	}
}

func getTokenInfo(token as string, listener as function<void,DynamicMap,Error>) static
{
	var op = new HTTPClientOperation()
	op.setAcceptInvalidCertificate(true)
	var req = HTTPClientRequest.forGET("https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=" .. URLEncoder.encode(token))
	op.executeRequest(req, new MyHTTPClientListener().setListener(listener))
	op.closeConnection(null)
}
