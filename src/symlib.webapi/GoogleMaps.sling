
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import jk.web
import jk.url
import jk.json

class:

func getTravelDetails(apiKey as string, origin as string, destination as string, callback as function<void,DynamicMap,Error>) static
{
	assert String.isNotEmpty(apiKey):
		callback(null, Error.forCode("apiKeyMissing"))
	var client = assert NativeWebClient.instance():
		callback(null, Error.forCode("failedToCreateNativeWebClient"))
	client.query("GET", "https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=" .. URLEncoder.encode(origin) .. "&destinations=" .. URLEncoder.encode(destination) .. "&key=" .. apiKey, null, null, func(statusCode as string, responseHeaders as KeyValueList<string,string>, body as buffer) {
		var json = assert JSONParser.parse(DataValidator.toValidJSONString(String.forUTF8Buffer(body))) as DynamicMap:
			callback(null, Error.forCode("invalidResponse"))
		assert String.isNotEqual("INVALID_REQUEST", json.getString("status")):
			callback(null, Error.forCode("invalidRequest"))
		callback(json, null)
	})
}
