
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import jk.ws.server

class is WSServerConnectionHandler:

prop authenticated as bool
prop engine as SMSEngine

func onOpened override
{
}

func onClosed override
{
	assert engine
	engine.onDisconnect(this)
}

func isNotAuthenticated as bool:
	return authenticated == false

func onDataMessage(message as WSServerMessage) override
{
	assert message:
		close()
	var data = assert message.getPayloadBuffer() {
		close()
	}
	onData(data)
}

func onData(data as buffer) private
{
	assert engine:
		close()
	engine.onDataReceived(data, this)
}

func sendMessage(message as buffer) as int
{
	assert message
	var r = sendResponse(WSServerMessage.create(1, 0, 0, 0, 1, null, message))
	if r < 1:
		close()
	return r
}
