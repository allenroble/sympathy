
/*
 * This file is part of Sympathy
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * Copyright (c) 2018 Eqela Oy
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import jk.sql

class is TemplateStorage:

func forDatabase(db as SQLDatabase, table as string = null, idColumn as string = null, contentColumn as string = null) static as this
{
	var v = new this()
	v.setDatabase(db)
	if table:
		v.setTable(table)
	if idColumn:
		v.setIdColumn(idColumn)
	if contentColumn:
		v.setContentColumn(contentColumn)
	return v
}

prop database as SQLDatabase
prop table as string
prop idColumn as string
prop contentColumn as string

ctor
{
	table = "templates"
	idColumn = "id"
	contentColumn = "content"
}

func getTemplate(id as string, callback as function<void,string>)
{
	assert callback
	if database == null || String.isEmpty(table) || String.isEmpty(id) {
		callback(null)
		return
	}
	var stmt = database.prepare("SELECT content FROM " .. table .. " WHERE " .. idColumn .. " = ?;")
	if stmt == null {
		callback(null)
		return
	}
	stmt.addParamString(id)
	var cb final = callback
	database.querySingleRow(stmt, func(data as DynamicMap) {
		if data == null {
			cb(null)
			return
		}
		cb(data.getString("content"))
	})
}
